/*
 * grunt-manifest
 * https://github.com/gunta/grunt-manifest
 *
 * Copyright (c) 2013 Gunther Brunner, contributors
 * Licensed under the MIT license.
 * https://github.com/gunta/grunt-manifest/blob/master/LICENSE-MIT
 */
'use strict';
module.exports = function (grunt) {


  grunt.registerMultiTask('manifest', 'Generate HTML5 cache manifest', function () {


    var options = this.options({verbose: true, timestamp: true});
    var done = this.async();

    function valueFn(value){
      return value;
    }

    function encode(value){
      return encodeURI(value);
    }

    grunt.verbose.writeflags(options, 'Options');

    this.files.forEach(function(file) {

      var contents = ['CACHE MANIFEST'];

      function extendContents(additionalArray) {
        additionalArray && contents.push.apply(contents, additionalArray);
        return extendContents;
      }

      file.rename = file.rename ? file.rename : valueFn;

      // check to see if src has been set
      // Why? shouldn't the option qualify for rendering a propper manifest alone?
      !file.src && grunt.fatal('Need to specify which files to include in the manifest.', 2);

      // Build the manifest
      extendContents
        (options.banner         && [grunt.template.process(options.banner)])
        (options.verbose        && ['# This manifest was generated by grunt-manifest HTML5 Cache Manifest Generator'])
        (options.timestamp      && ['# Time: ' + new Date()])
        (options.revision       && ['# Revision: ' + options.revision])
        (                          ['', 'CACHE:'])
        (file.src               && file.src.map(file.rename).map(encode))
        (options.cache          && options.cache.map(encode))
        (                          ['', 'NETWORK:'])
        (options.network         ? network.map(encode) : ["*"])
        (options.fallback       && ['', 'FALLBACK:'])
        (                          options.fallback)
        (options.preferOnline   && ['', 'SETTINGS:', 'prefer-online'])


      contents = contents.join("\n");

      grunt.verbose.writeln('\n' + (contents).yellow);

      grunt.file.write(file.dest || "manifest.appcache", contents);

      grunt.log.writeln('File "' + file.dest + '" created.');

      done();

    });

  });

};
